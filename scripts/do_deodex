
while :
do

  clear

  echo
  echo "----------------------------------------------------------------"
  echo  
  echo "Deodexing (or de-odex'ing) will take the *.odex files in your "
  echo "ROM and convert them into classes.dex files, which will then be" 
  echo "zipped into their *.apk or framework *.jar files."
  echo ""
  echo "The intent is to improve the performance of all apps. It also"
  echo "puts certain *.apk files into a state where they can be used for"
  echo "themes, icons, trackball/trackpad modifications, etc."
  echo
  echo "The process usually takes several minutes and does NOT require"
  echo "you to sign any of the files afterwards."
  echo
  echo "----------------------------------------------------------------"
  echo

  if [ `ls tools/deodex_files | grep -c smali` -gt 2 ]
  then
    echo "Error: tools/deodex_files has multiple versions of smali/baksmali!"
    scripts/press_enter
    exit 0
  fi

  if [ ! -d WORKING_* ]
  then
    echo No working folder found!
    scripts/press_enter
    exit 0
  fi

  cd WORKING_*

  if [ ! -d system/app ]
  then
    echo "system/app is missing!"
    cd ..
    scripts/press_enter
    exit 0
  fi

  if [ ! -d system/framework ]
  then
    echo "system/framework is missing!"
    cd ..
    scripts/press_enter
    exit 0
  fi


  num_odex=`find . | grep -c "\.odex$"`

  if [ "$num_odex" == "0" ]
  then
    echo "No *.odex files found, no need to deodex!"
    cd ..
    scripts/press_enter
    exit 0

  else

    num_odex_fr=`find system/framework | grep -c "\.odex$"`
    num_odex_app=`find system/app | grep -c "\.odex$"`

    echo "Found $num_odex_fr *.odex files in system/framework"
    echo "Found $num_odex_app *.odex files in system/app"

    if [ $num_odex_fr == 0 ] && [ $num_odex_app -gt 0 ]
    then
      echo
      echo "WARNING: You must deodex the app folder if you had already"
      echo "deodexed the framework folder."
    fi


    #
    # Show menu choices
    #

    echo
    echo "Enter a choice:"
    echo

    if [ $num_odex_app -gt 0 ] && [ $num_odex_fr -gt 0 ]
    then
      echo " bb  = Back up both folders (do first!)"
    fi
    if [ $num_odex_fr -gt 0 ]
    then
      echo "  f  = Deodex /system/framework"
    fi
    if [ $num_odex_app -gt 0 ]
    then
      echo "  a  = Deodex /system/app"
    fi
    if [ $num_odex_app -gt 0 ] && [ $num_odex_fr -gt 0 ]
    then
      echo "  b  = Deodex both folders (recommended)"
    fi
    echo "  s  = Deodex a single file"
    echo "  x  = Exit"
    echo
    echo -n "? "

    read enterChoice

    #
    # Read number of *.odex again in case the user added more
    # after prompted 
    #
    num_odex_fr=`find system/framework | grep -c "\.odex$"`
    num_odex_app=`find system/app | grep -c "\.odex$"`

    list1=( app )
    list2=( framework )
    list3=( framework app )

    if [ "$enterChoice" == "a" ]
    then
      dir_list=( app )
    elif [ "$enterChoice" == "f" ] 
    then
      dir_list=( framework )
    elif [ "$enterChoice" == "b" ] 
    then
      dir_list=( framework app )
    elif [ "$enterChoice" == "s" ]
    then
      cd ..
      scripts/choose_single_deodex
      continue
    elif [ "$enterChoice" == "bb" ]
    then

      #
      # Backup
      #

      folder_list=( framework app )
      date_str=`date '+%m%d%y_%H%M%S'`

      for f in ${folder_list[@]}
      do

        backup_folder="old_`echo -n $f`_$date_str"
        cd system/$f

        echo
        echo "Creating backup folder $backup_folder outside working folder ..."
        mkdir ../../../$backup_folder
        cp  * ../../../$backup_folder/
        echo "Finished backup of $f folder."

        cd ../..
      done

      cd ..
      scripts/press_enter
      continue

    elif [ "$enterChoice" == "x" ]
    then
      cd ..
      exit 0
    else
      cd ..
      continue
    fi
  fi



  #
  # Go through each folder that was selected
  #

  for folder in ${dir_list[@]}
  do

    if [ $folder == framework ]
    then
      num_odex_folder=$num_odex_fr
    else
      num_odex_folder=$num_odex_app
    fi

    count=0
    found_error=0
    path=system/$folder

    echo
    echo
    echo "Going into $path ..."
    echo

    cd $path

    grep_cmd=`find . | grep "\.odex$" | sed 's/.\///g' | sort -f`

    if [ "$grep_cmd" == "" ]
    then
      echo "Nothing found under $path!"
    else

      #
      # Finally, deodex each file
      #
      echo "Trying this version of baksmali/smali:"
      ls ../../../tools/deodex_files/*.jar | sed -e 's/.*\///g'
      echo
      version=newer
      cp -f ../../../tools/deodex_files/baksmali*.jar baksmali.jar
      cp -f ../../../tools/deodex_files/smali*.jar smali.jar

      for odex_file in $grep_cmd
      do

        count=$(($count+1))
        echo
        echo "NOW AT FILE $count OF $num_odex_folder IN $path: $odex_file"
        try=1

        while [ -e $odex_file ]
        do

          ../../../scripts/do_deodex_file $odex_file ../framework
          
          #
          # Use brute-force method if it failed
          #

          if [ -e $odex_file ]
          then

            current_dir=`pwd`
            cd ../framework

            # Get a list of all the framework JARs
            fr_jar_list=`find . | grep "\.jar$" | sed 's/.\///g' | sort -f`
            fr_jar_list=`echo $fr_jar_list | \
                        sed \
                          -e 's/baksmali.jar//' \
                          -e 's/smali.jar//' \
                          -e 's/ /:/g'`
          
            cd $current_dir

            echo
            echo 
            echo "-> Using brute-force method:"
            echo

            ../../../scripts/do_deodex_file $odex_file ../framework $fr_jar_list
             
            if [ -e $odex_file ] && [ $try == 2 ]
            then

              if [ $version==older ]
              then
                echo
                echo "Reverting to newer baksmali/smali:"
                ls ../../../tools/deodex_files/*.jar | sed -e 's/.*\///g'
                echo
                version=newer
                cp -f ../../../tools/deodex_files/baksmali*.jar baksmali.jar
                cp -f ../../../tools/deodex_files/smali*.jar smali.jar              
              fi  

              echo "Trying $odex_file but ignoring error ..."
              ../../../scripts/do_deodex_file $odex_file ../framework $fr_jar_list yes

              if [ -e $odex_file ]
              then
                echo "ERROR: Aborting $odex_file"
                found_error=1
              fi
              
              break
            fi    

            if [ $version==newer ]
            then
              echo
              echo "Trying older version of baksmali/smali:"
              ls ../../../tools/deodex_files/old_version/*.jar | sed -e 's/.*\///g'
              echo
              version=older
              cp -f ../../../tools/deodex_files/old_version/baksmali*.jar baksmali.jar
              cp -f ../../../tools/deodex_files/old_version/smali*.jar smali.jar
            else 
              echo
              echo "Trying newer version of baksmali/smali:"
              ls ../../../tools/deodex_files/*.jar | sed -e 's/.*\///g'
              echo
              version=newer
              cp -f ../../../tools/deodex_files/baksmali*.jar baksmali.jar
              cp -f ../../../tools/deodex_files/smali*.jar smali.jar
            fi

            try=2

          fi
        done

      done

      rm -f baksmali.jar
      rm -f smali.jar

      echo
      echo "Finished $path"

      if [ "$found_error" == "1" ]
      then
        echo "Could not deodex the following (try to deodex these files again):"
        echo `ls *.odex`
        echo
        cd ../..
        break
      fi

    fi

    cd ../..

  done



  num_odex_app=`find system/app | grep -c "\.odex$"`
  num_odex_fr=`find system/framework | grep -c "\.odex$"`

  echo
  echo "$num_odex_app *.odex files remain in system/app"
  echo "$num_odex_fr *.odex files remain in system/framework"

  if [ $num_odex_fr == 0 ] && [ $num_odex_app -gt 0 ]
  then
    echo
    echo "WARNING: You must deodex the app folder if you had already"
    echo "deodexed the framework folder."
  fi

  cd ..
  scripts/press_enter

  if [ $num_odex_fr == 0 ] && [ $num_odex_app == 0 ]
  then
    exit 0
  fi

done
