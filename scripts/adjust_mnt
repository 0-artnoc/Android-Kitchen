#
# This file has one mandatory argument:
# $1 = updater-script/update-script
#

###############################
# Device-specific mount points
###############################

if [ "$1" != "" ]
then

  device_name=`scripts/get_device_name`
  cd WORKING_*
  cd META-INF/com/google/android


  #
  # Device definitions go here
  # Ensure scripts/update_script_should_convert_back is also updated!
  #

  # Desire HD
  if [ "$device_name" == "ace" ]
  then
    change_mnt=yes

    param1=ext3
    param2=EMMC
    sys_mnt=\\\/dev\\\/block\\\/mmcblk0p25
    cache_mnt=\\\/dev\\\/block\\\/mmcblk0p27
    boot_mnt=\\\/dev\\\/block\\\/mmcblk0p22
    data_mnt=\\\/dev\\\/block\\\/mmcblk0p26
    sdcard_mnt=???

  # Evo Shift 4G    
  elif [ "$device_name" == "speedy" ]
  then
    change_mnt=yes

    param1=ext3
    param2=EMMC
    sys_mnt=\\\/dev\\\/block\\\/mmcblk0p26
    cache_mnt=\\\/dev\\\/block\\\/mmcblk0p28
    boot_mnt=\\\/dev\\\/block\\\/mmcblk0p22
    data_mnt=\\\/dev\\\/block\\\/mmcblk0p27
    sdcard_mnt=\\\/dev\\\/block\\\/mmcblk1p1
  fi

  if [ "$change_mnt" == "yes" ]
  then

    if [ "$1" == "updater-script" ]
    then

      sed -i \
        -e 's/format("MTD", "system")/format("'"$param1"'", "'"$param2"'", "'"$sys_mnt"'")/g' \
        -e 's/format("MTD", "cache")/format("'"$param1"'", "'"$param2"'", "'"$cache_mnt"'")/g' \
        -e 's/format("MTD", "boot")/format("'"$param1"'", "'"$param2"'", "'"$boot_mnt"'")/g' \
        -e 's/format("MTD", "userdata")/format("'"$param1"'", "'"$param2"'", "'"$data_mnt"'")/g' \
        \
        -e 's/mount("MTD", "system"/mount("'"$param1"'", "'"$param2"'", "'"$sys_mnt"'"/g' \
        -e 's/mount("MTD", "cache"/mount("'"$param1"'", "'"$param2"'", "'"$cache_mnt"'"/g' \
        -e 's/mount("MTD", "boot"/mount("'"$param1"'", "'"$param2"'", "'"$boot_mnt"'"/g' \
        -e 's/mount("MTD", "userdata"/mount("'"$param1"'", "'"$param2"'", "'"$data_mnt"'"/g' \
        -e 's/mount("MTD", "sdcard"/mount("'"$param1"'", "'"$param2"'", "'"$sdcard_mnt"'"/g' \
        updater-script

    elif [ "$1" == "update-script" ]
    then

      sed -i \
        -e 's/format '"$param1"' '"$param2"' '"$sys_mnt"'/format SYSTEM:/g' \
        -e 's/format '"$param1"' '"$param2"' '"$cache_mnt"'/format CACHE:/g' \
        -e 's/format '"$param1"' '"$param2"' '"$boot_mnt"'/format BOOT:/g' \
        -e 's/format '"$param1"' '"$param2"' '"$data_mnt"'/format DATA:/g' \
        \
        -e 's/format '"$param1"' '"$sys_mnt"'/format SYSTEM:/g' \
        -e 's/format '"$param1"' '"$cache_mnt"'/format CACHE:/g' \
        -e 's/format '"$param1"' '"$boot_mnt"'/format BOOT:/g' \
        -e 's/format '"$param1"' '"$data_mnt"'/format DATA:/g' \
        update-script
    fi
  fi


  #
  # Fix cases where a mount hasn't been fixed yet
  #
  # e.g.  If updater-script contains: 
  #         mount("MTD", "userdata", "/data");
  #       But the other mount entries in file look like:  
  #         mount("yaffs2", "MTD", ...);
  #
  if [ "$1" == "updater-script" ]
  then
    
    grep_list=( yaffs2 ext3 )

    for str in ${grep_list[@]}
    do
      grep_result=`grep -c "^mount(\"$str\"" updater-script`

      if [ $grep_result -gt 0 ]
      then
        sed -i \
          -e 's/^mount("MTD"/mount("'"$str"'", "MTD"/g' \
          updater-script
        break
      fi
    done

  fi

  cd ../../../../..

fi
